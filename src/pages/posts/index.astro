---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import Container from '@components/Container.astro';
import Card from '@components/Card.astro';
import { BLOG } from '@consts';

const data = (await getCollection('posts'))
	.filter((post) => !post.data.draft)
	.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
	[year: string]: CollectionEntry<'posts'>[];
};

const posts = data.reduce((acc: Acc, post) => {
	const year = post.data.date.getFullYear().toString();
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(post);
	return acc;
}, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));
---

<Layout
	title={BLOG.TITLE}
	description={BLOG.DESCRIPTION}>
	<Container>
		<div class='space-y-4'>
			<div class='animate font-semibold text-black dark:text-white'>
				Recent posts
			</div>
			<div class='space-y-4'>
				{
					years.map((year) => (
						<section class='animate'>
							<div class='font-semibold text-black dark:text-white'>{year}</div>
							<div>
								<ul class='flex flex-col gap-4'>
									{posts[year].map((post) => (
										<li>
											<Card entry={post} />
										</li>
									))}
								</ul>
							</div>
						</section>
					))
				}
			</div>
		</div>
	</Container>
</Layout>
